div(ng-include='"components/navbar/navbar.html"')
.container
  .row
    .col-sm-12
      h1 Sign up
    .col-sm-12
      form.form(name='form', ng-submit='register(form)', novalidate='')
        .form-group(ng-class='{ "has-success": form.name.$valid && submitted,\
        "has-error": form.name.$invalid && submitted }')
          label Name
          input.form-control(type='text', name='name', ng-model='user.name', required='')
          p.help-block(ng-show='form.name.$error.required && submitted')
            | A name is required

        .form-group(ng-class='{ "has-success": form.email.$valid && submitted,\
        "has-error": form.email.$invalid && submitted }')
          label Email
          input.form-control(type='email', name='email', ng-model='user.email', required='', mongoose-error='')
          p.help-block(ng-show='form.email.$error.email && submitted')
            | Doesn't look like a valid email.
          p.help-block(ng-show='form.email.$error.required && submitted')
            | What's your email address?
          p.help-block(ng-show='form.email.$error.mongoose')
            | {{ errors.email }}

        .form-group(ng-class='{ "has-success": form.password.$valid && submitted,\
        "has-error": form.password.$invalid && submitted }')
          label Password
          input.form-control(type='password', name='password', ng-model='user.password', ng-minlength='3', required='', mongoose-error='')
          p.help-block(ng-show='(form.password.$error.minlength || form.password.$error.required) && submitted')
            | Password must be at least 3 characters.
          p.help-block(ng-show='form.password.$error.mongoose')
            | {{ errors.password }}

        // TODO: make this a drop-down
        .form-group(ng-class='{ "has-success": form.customerType.$valid && submitted,\
        "has-error": form.customerType.$invalid && submitted }')
          label Buyer / Seller
          input.form-control(type='text', name='customerType', ng-model='user.customerType', required='', mongoose-error='')
          p.help-block(ng-show='form.customerType.$error.required && submitted')
            | Are you a buyer or a seller?
          // TODO: make this more human friendly
          p.help-block(ng-show='form.customerType.$error.mongoose')
            | {{ errors.customerType }}

        h3 Contact Info

        // TODO: add phone number validation
        .form-group(ng-class='{ "has-success": form.phoneNumber.$valid && submitted }')
          label Phone Number
          input.form-control(type='text', name='phoneNumber', ng-model='user.phoneNumber', required='', mongoose-error='')
          p.help-block(ng-show='form.phoneNumber.$error.mongoose')
            | {{ errors.phoneNumber }}

        // TODO: add fax number validation
        .form-group(ng-class='{ "has-success": form.faxNumber.$valid && submitted }')
          label Fax Number
          input.form-control(type='text', name='faxNumber', ng-model='user.faxNumber', required='', mongoose-error='')
          p.help-block(ng-show='form.faxNumber.$error.mongoose')
            | {{ errors.faxNumber }}

        h3 Address Info

        .form-group(ng-class='{ "has-success": form.addressFullName.$valid && submitted }')
          label Full Name
          input.form-control(type='text', name='addressFullName', ng-model='user.addressFullName', required='', mongoose-error='')
          p.help-block(ng-show='form.addressFullName.$error.mongoose')
            | {{ errors.addressFullName }}

        .form-group(ng-class='{ "has-success": form.addressLine1.$valid && submitted }')
          label Address Line 1 (Street address, P.O. box, company name, c/o)
          input.form-control(type='text', name='addressLine1', ng-model='user.addressLine1', required='', mongoose-error='')
          p.help-block(ng-show='form.addressLine1.$error.mongoose')
            | {{ errors.addressLine1 }}

        .form-group(ng-class='{ "has-success": form.addressLine2.$valid && submitted }')
          label Address Line 2 (Apartment, suite, unit, building, floor, etc.)
          input.form-control(type='text', name='addressLine2', ng-model='user.addressLine2', required='', mongoose-error='')
          p.help-block(ng-show='form.addressLine2.$error.mongoose')
            | {{ errors.addressLine2 }}

        .form-group(ng-class='{ "has-success": form.city.$valid && submitted }')
          label City
          input.form-control(type='text', name='city', ng-model='user.city', required='', mongoose-error='')
          p.help-block(ng-show='form.city.$error.mongoose')
            | {{ errors.city }}

        .form-group(ng-class='{ "has-success": form.state.$valid && submitted }')
          label State
          input.form-control(type='text', name='state', ng-model='user.state', required='', mongoose-error='')
          p.help-block(ng-show='form.state.$error.mongoose')
            | {{ errors.state }}

        .form-group(ng-class='{ "has-success": form.zipCode.$valid && submitted }')
          label Zip Code
          input.form-control(type='text', name='zipCode', ng-model='user.zipCode', required='', mongoose-error='')
          p.help-block(ng-show='form.zipCod.$error.mongoose')
            | {{ errors.zipCode }}

        div
          button.btn.btn-inverse.btn-lg.btn-login(type='submit')
            | Sign up

        hr

        div
          a.btn.btn-facebook(href='', ng-click='loginOauth("facebook")')
            i.fa.fa-facebook
            |  Connect with Facebook
          = ' '
          a.btn.btn-google-plus(href='', ng-click='loginOauth("google")')
            i.fa.fa-google-plus
            |  Connect with Google+
          = ' '
          a.btn.btn-twitter(href='', ng-click='loginOauth("twitter")')
            i.fa.fa-twitter
            |  Connect with Twitter
  hr
